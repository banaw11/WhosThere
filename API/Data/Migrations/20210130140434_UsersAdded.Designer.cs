// <auto-generated />
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210130140434_UsersAdded")]
    partial class UsersAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("API.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Gender")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsChatting")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<int>("MinAge")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SelectedGender")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API.Entities.Connections", b =>
                {
                    b.Property<string>("CallerConnectionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("OtherConnectionId")
                        .HasColumnType("TEXT");

                    b.HasKey("CallerConnectionId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("API.Entities.Group", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConnectionsCallerConnectionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.HasIndex("ConnectionsCallerConnectionId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("API.Entities.Group", b =>
                {
                    b.HasOne("API.Entities.Connections", "Connections")
                        .WithMany()
                        .HasForeignKey("ConnectionsCallerConnectionId");

                    b.Navigation("Connections");
                });
#pragma warning restore 612, 618
        }
    }
}
